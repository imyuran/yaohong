###################### Filebeat Configuration Example #########################

# This file is an example configuration file highlighting only the most common
# options. The filebeat.reference.yml file from the same directory contains all the
# supported options with more comments. You can use it as a reference.
#
# You can find the full configuration reference here:
# https://www.elastic.co/guide/en/beats/filebeat/index.html

# For more available modules and options, please see the filebeat.reference.yml sample
# configuration file.

#=========================== Filebeat inputs =============================

filebeat.inputs:

# Each - is an input. Most options can be set at the input level, so
# you can use different inputs for various configurations.
# Below are the input specific configurations.

- type: log

  # Change to true to enable this input configuration.
  enabled: false

  # Paths that should be crawled and fetched. Glob based paths.
  paths:
    - /var/log/*.log
    #- c:\programdata\elasticsearch\logs\*

  # Exclude lines. A list of regular expressions to match. It drops the lines that are
  # matching any regular expression from the list.
  #exclude_lines: ['^DBG']

  # Include lines. A list of regular expressions to match. It exports the lines that are
  # matching any regular expression from the list.
  #include_lines: ['^ERR', '^WARN']

  # Exclude files. A list of regular expressions to match. Filebeat drops the files that
  # are matching any regular expression from the list. By default, no files are dropped.
  #exclude_files: ['.gz$']

  # Optional additional fields. These fields can be freely picked
  # to add additional information to the crawled log files for filtering
  #fields:
  #  level: debug
  #  review: 1

  ### Multiline options

  # Multiline can be used for log messages spanning multiple lines. This is common
  # for Java Stack Traces or C-Line Continuation

  # The regexp Pattern that has to be matched. The example pattern matches all lines starting with [
  #multiline.pattern: ^\[

  # Defines if the pattern set under pattern should be negated or not. Default is false.
  #multiline.negate: false

  # Match can be set to "after" or "before". It is used to define if lines should be append to a pattern
  # that was (not) matched before or after or as long as a pattern is not matched based on negate.
  # Note: After is the equivalent to previous and before is the equivalent to to next in Logstash
  #multiline.match: after

#########  prod  #########
- type: log
  enabled: true
  paths:
    - /data/logs/app/www.vipthink.cn*.log
  #exclude_lines: ['^info']
  #include_lines: ['^\[ error \]']
  fields:
    log_topic: vipthink
    type: prod_www.vipthink.cn
  multiline.pattern: '^\['
  multiline.negate: true
  multiline.match: after
  tail_files: true

- type: log
  enabled: true
  paths:
    - /data/logs/app/edu.vipthink.cn*.log
  #exclude_lines: ['^info']
  #include_lines: ['^\[ error \]']
  fields:
    log_topic: vipthink
    type: prod_edu.vipthink.cn
  multiline.pattern: '^\['
  multiline.negate: true
  multiline.match: after
  tail_files: true

- type: log
  enabled: true
  paths:
    - /data/logs/app/edu-gray.vipthink.cn*.log
  #exclude_lines: ['^info']
  #include_lines: ['^\[ error \]']
  fields:
    log_topic: vipthink
    type: prod_gray.vipthink.cn
  multiline.pattern: '^\['
  multiline.negate: true
  multiline.match: after
  tail_files: true

- type: log
  enabled: true
  paths:
    - /data/logs/app/fz.vipthink.cn*.log
  json.keys_under_root: true
  json.overwrite_keys: true
  fields:
    log_topic: vipthink
    type: prod_fz.vipthink.cn
  tail_files: true

- type: log
  enabled: true
  paths:
    - /data/logs/app/fz-gray.vipthink.cn*.log
  json.keys_under_root: true
  json.overwrite_keys: true
  fields:
    log_topic: vipthink
    type: prod_fz-gray.vipthink.cn
  tail_files: true

- type: log
  enabled: true
  paths:
    - /data/logs/app/java/workorder.vipthink.cn.log
  fields:
    log_topic: vipthink
    type: prod_workorder.vipthink.cn
  multiline.pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}'
  multiline.negate: true
  multiline.match: after

- type: log
  enabled: true
  paths:
    - /data/logs/app/java/payservice.vipthink.cn.log
  fields:
    log_topic: vipthink
    type: prod_payservice.vipthink.cn
  multiline.pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}'
  multiline.negate: true
  multiline.match: after

- type: log
  enabled: true
  paths:
    - /data/logs/app/java/encrypt.vipthink.cn.log
  fields:
    log_topic: vipthink
    type: prod_encrypt.vipthink.cn
  multiline.pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}'
  multiline.negate: true
  multiline.match: after

#########  Pre  #########
- type: log
  enabled: true
  paths:
    - /data/logs/app/*pre*.log
  #exclude_lines: ['^info']
  #include_lines: ['^\[ error \]']
  exclude_files: ['fz-pre.vipthink.cn.log']
  fields:
    log_topic: vipthink
    type: pre
  multiline.pattern: '^\['
  multiline.negate: true
  multiline.match: after
  #tail_files: true

- type: log
  enabled: true
  paths:
    - /data/logs/app/*fz*.log
  json.keys_under_root: true
  json.overwrite_keys: true
  #max_depth: 1
  fields:
    log_topic: vipthink
    type: pre
  #tail_files: true

- type: log
  enabled: true
  paths:
    - /data/logs/app/java/*pre*.log
  fields:
    log_topic: vipthink
    type: pre
  multiline.pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}'
  multiline.negate: true
  multiline.match: after

#########  test  #########
- type: log
  enabled: true
  paths:
    - /data/logs/app/*test*.log
  #exclude_lines: ['^info']
  #include_lines: ['^\[ error \]']
  exclude_files: ['fz-dev.vipthink.cn.log','dev-fz.vipthink.cn.log','fz-test.vipthink.cn.log','test-fz.vipthink.cn.log']
  fields:
    log_topic: vipthink
    type: test
  multiline.pattern: '^\['
  multiline.negate: true
  multiline.match: after
  tail_files: true

- type: log
  enabled: true
  paths:
    - /data/logs/app/*fz*.log
  json.keys_under_root: true
  json.overwrite_keys: true
  #max_depth: 1
  fields:
    log_topic: vipthink
    type: test
  tail_files: true

- type: log
  enabled: true
  paths:
    - /data/logs/app/java/*test*.log
  fields:
    log_topic: vipthink
    type: test
  multiline.pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}'
  multiline.negate: true
  multiline.match: after

#########  uat  #########
- type: log
  enabled: true
  paths:
    - /data/logs/app/*uat*.log
  exclude_files: ['fz-uat.vipthink.cn.log','uat-fz.vipthink.cn.log','fz-test.vipthink.cn.log','test-fz.vipthink.cn.log']
  fields:
    log_topic: vipthink
    type: uat
  multiline.pattern: '^\['
  multiline.negate: true
  multiline.match: after

- type: log
  enabled: true
  paths:
    - /data/logs/app/json/*fz*.log
  json.keys_under_root: true
  json.overwrite_keys: true
  #max_depth: 1
  fields:
    log_topic: vipthink
    type: uat
  tail_files: true

- type: log
  enabled: true
  paths:
    - /data/logs/app/java/*uat*.log
  fields:
    log_topic: vipthink
    type: uat
  multiline.pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}'
  multiline.negate: true
  multiline.match: after


#########  nginx  ##########
- type: log
  enabled: true
  paths:
    - /data/logs/web/*.access.log
  json.keys_under_root: true
  json.overwrite_keys: true
  fields:
    log_topic: vipthink
    type: "ngx-uat-access"
    
- type: log
  enabled: true
  paths:
    - /data/logs/web/*.error.log
  fields:
    log_topic: vipthink
    type: "ngx-uat-error"
    



#============================= Filebeat modules ===============================

filebeat.config.modules:
  # Glob pattern for configuration loading
  path: ${path.config}/modules.d/*.yml

  # Set to true to enable config reloading
  reload.enabled: false

  # Period on which files under path should be checked for changes
  #reload.period: 10s

#==================== Elasticsearch template setting ==========================

setup.template.settings:
  index.number_of_shards: 1
  #index.codec: best_compression
  #_source.enabled: false

#================================ General =====================================

# The name of the shipper that publishes the network data. It can be used to group
# all the transactions sent by a single shipper in the web interface.
#name:

# The tags of the shipper are included in their own field with each
# transaction published.
#tags: ["service-X", "web-tier"]

# Optional fields that you can specify to add additional information to the
# output.
#fields:
#  env: staging


#============================== Dashboards =====================================
# These settings control loading the sample dashboards to the Kibana index. Loading
# the dashboards is disabled by default and can be enabled either by setting the
# options here or by using the `setup` command.
#setup.dashboards.enabled: false

# The URL from where to download the dashboards archive. By default this URL
# has a value which is computed based on the Beat name and version. For released
# versions, this URL points to the dashboard archive on the artifacts.elastic.co
# website.
#setup.dashboards.url:

#============================== Kibana =====================================

# Starting with Beats version 6.0.0, the dashboards are loaded via the Kibana API.
# This requires a Kibana endpoint configuration.
setup.kibana:

  # Kibana Host
  # Scheme and port can be left out and will be set to the default (http and 5601)
  # In case you specify and additional path, the scheme is required: http://localhost:5601/path
  # IPv6 addresses should always be defined as: https://[2001:db8::1]:5601
  #host: "localhost:5601"

  # Kibana Space ID
  # ID of the Kibana Space into which the dashboards should be loaded. By default,
  # the Default Space will be used.
  #space.id:

#============================= Elastic Cloud ==================================

# These settings simplify using Filebeat with the Elastic Cloud (https://cloud.elastic.co/).

# The cloud.id setting overwrites the `output.elasticsearch.hosts` and
# `setup.kibana.host` options.
# You can find the `cloud.id` in the Elastic Cloud web UI.
#cloud.id:

# The cloud.auth setting overwrites the `output.elasticsearch.username` and
# `output.elasticsearch.password` settings. The format is `<user>:<pass>`.
#cloud.auth:

#================================ Outputs =====================================

# Configure what output to use when sending the data collected by the beat.

#-------------------------- Elasticsearch output ------------------------------
#output.elasticsearch:
  # Array of hosts to connect to.
#  hosts: ["localhost:9200"]

  # Optional protocol and basic auth credentials.
  #protocol: "https"
  #username: "elastic"
  #password: "changeme"

#----------------------------- Logstash output --------------------------------
#output.logstash:
  # The Logstash hosts
  #hosts: ["localhost:5044"]

  # Optional SSL. By default is off.
  # List of root certificates for HTTPS server verifications
  #ssl.certificate_authorities: ["/etc/pki/root/ca.pem"]

  # Certificate for SSL client authentication
  #ssl.certificate: "/etc/pki/client/cert.pem"

  # Client Certificate Key
  #ssl.key: "/etc/pki/client/cert.key"

#----------------------------- kafka output --------------------------------
output.kafka:

  # Change to tll
  rue to enable this input configuration.
  enabled: true

  # initial brokers for reading cluster metadata 10.27.186.84
  #hosts: ["100.121.193.81:9092"]  # CLB VIP
  hosts: ["elk:9092","elk2:9092","elk3:9092"]

  # message topic selection + partitioning
  # topic: dev_tomcat_happygo_mashup
  topic: '%{[fields.log_topic]}'
  partition.round_robin:
    reachable_only: false

  required_acks: 1
  compression: gzip
  max_message_bytes: 100000000000

#================================ Processors =====================================

# Configure processors to enhance or manipulate events generated by the beat.

processors:
  - add_host_metadata: ~
  - add_cloud_metadata: ~

  # drop fields
  #- drop_fields:

      #fields: ["beat.hostname", "beat.name", "beat.version", "input_type", "beat"]
      #fields: ["input", "cloud", "log.offset", "agent", "type", "ecs"]

#================================ Logging =====================================

# Sets log level. The default log level is info.
# Available log levels are: error, warning, info, debug
#logging.level: debug

# At debug level, you can selectively enable logging only for some components.
# To enable all selectors use ["*"]. Examples of other selectors are "beat",
# "publish", "service".
#logging.selectors: ["*"]

#============================== Xpack Monitoring ===============================
# filebeat can export internal metrics to a central Elasticsearch monitoring
# cluster.  This requires xpack monitoring to be enabled in Elasticsearch.  The
# reporting is disabled by default.

# Set to true to enable the monitoring reporter.
monitoring.enabled: false

# Uncomment to send the metrics to Elasticsearch. Most settings from the
# Elasticsearch output are accepted here as well.
# Note that the settings should point to your Elasticsearch *monitoring* cluster.
# Any setting that is not set is automatically inherited from the Elasticsearch
# output configuration, so if you have the Elasticsearch output configured such
# that it is pointing to your Elasticsearch monitoring cluster, you can simply
# uncomment the following line.
#monitoring.elasticsearch:

#================================= Migration ==================================

# This allows to enable 6.7 migration aliases
#migration.6_to_7.enabled: true
